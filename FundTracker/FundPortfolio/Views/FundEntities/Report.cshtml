@model Common.Models.Report

@{
        ViewBag.Title = "Report";
}

@section scripts {
    <script src="~/Scripts/swfobject.js"></script>
    <script src="~/Scripts/downloadify.min.js"></script>
    @Styles.Render("~/Content/c3.css")
    <script src="/Scripts/d3.min.js" charset="utf-8"></script>
    <script src="/Scripts/c3.min.js"></script>
}

<div id="chart" class="graph"></div>

<br />
<p id="export"></p>
<br />

<table class="table">
    <thead>
        <tr>
            <th>
                Date
            </th>
            @foreach (var item in Model.FundNames)
            {
                <th>
                    @item
                </th>
            }
        </tr>
    </thead>

    <tbody>
        @* Iterate over date range *@
        @{
            for (int i = 0; i < Model.Dates.Count; i++)
            {
                <tr>
                    <td>
                        @Model.Dates[i].Date
                    </td>
                    @foreach (List<String> vals in Model.FundsData)
                    {
                    <td>
                        @vals[i]
                    </td>
                    }
                </tr>
            }
        }
    </tbody>
</table>

<script>
    /* Create export */
    @{
        string names = "";
        foreach (var item in Model.FundNames)
        {
            names += item + ", ";
        }
        names = names.Substring(0, names.Length - 2);
    }

    // Assemble export data
    var tableData = "Date, @names"+"\n";
    var cols = $('th').size();
    var $cells = $('td');
    for (var i = 0; i < $cells.size() ; i++) {
        tableData += $cells[i].innerHTML.trim() + ", ";
        if (i % cols == cols - 1) {
            tableData = tableData.substring(0, tableData.length - 2) + "\n";
        }
    }    

    var options = {
        filename: function () {
            var date = new Date();
            date = date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
            return 'FundTrackerReport - ' + date + '.csv'; //static file -- you could retrieve from form input box
        },
        data: function () {
            return tableData; //static content -- you could retrieve from form input box
        },
        onComplete: function () {
        },
        onCancel: function () {
        },
        onError: function () {
            alert('Oops, an error has occurred with your download.  Sorry.');
        },
        transparent: false,
        swf: '../Media/downloadify.swf',
        downloadImage: '../Images/download.png',
        width: 156,
        height: 26,
        transparent: true,
        append: false
    }

    Downloadify.create('export', options);


    /* create graph */
    var graphType = "@ViewBag.graph";
    if ("NO_GRAPH" != graphType) {

        /* Create data based on graphType */
        if ("VALUE_GRAPH" == graphType) {
            
        } else if ("CHANGE_GRAPH" == graphType) {
            
        }

        /* generate graph based on data */
        var chart = c3.generate({
            bindto: '#chart',
            data: {
                columns: [
                  ['data1', 30, 200, 100, 400, 150, 250],
                  ['data2', 50, 20, 10, 40, 15, 25]
                ]
            }
        });
    }
    
</script>
